# This file is a template, and might need editing before it works on your project.
image: golang:latest

variables:
  GO_LOCAL_PACKAGE_NAME: lander

# The problem is that to be able to use go get, one needs to put
# the repository in the $GOPATH. So for example if your gitlab domain
# is gitlab.com, and that your repository is namespace/project, and
# the default GOPATH being /go, then you'd need to have your
# repository in /go/src/gitlab.com/namespace/project
# Thus, making a symbolic link corrects this.
before_script:
  - curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
  - mkdir -p $GOPATH/src/$GO_LOCAL_PACKAGE_NAME
  - ln -svf $CI_PROJECT_DIR/* $GOPATH/src/$GO_LOCAL_PACKAGE_NAME
  - cd $GOPATH/src/$GO_LOCAL_PACKAGE_NAME

stages:
    - test
    - build

format:
    stage: test
    script:
      - dep ensure
      - go fmt $(go list ./... | grep -v /vendor/)
      - go vet -composites=false $(go list ./... | grep -v /vendor/)
      - go test -race $(go list ./... | grep -v /vendor/)

compile:
    stage: build
    script:
      - dep ensure
      - go build -race -ldflags "-extldflags '-static'" -o $CI_PROJECT_DIR/lander
    artifacts:
      paths:
        - lander
